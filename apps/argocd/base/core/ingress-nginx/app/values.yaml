# SOURCE: https://github.com/cloudnative-pg/cloudnative-pg/blob/89a46c9904f6220e06a28f463697b98ba90bc746/docs/src/samples/cluster-expose-service.yaml#L4
commonLabels:
  prometheus: main

controller:
  # -- Configures the ports that the nginx-controller listens on
  containerPort:
    http: 80
    https: 443
    # argo: 2746
    ssh: 22
    # postgres: 5432
  replicaCount: 1
  allowSnippetAnnotations: true
  extraEnvs:
    - name: TZ
      value: America/New_York
  service:
    type: LoadBalancer
    externalTrafficPolicy: Local
    # -- Labels to be added to both controller services.
    labels:
      prometheus: main
  ingressClassResource:
    default: true
  config:
    proxy-body-size: 0
    proxy-buffer-size: "16k"
    ssl-protocols: "TLSv1.3 TLSv1.2"
    use-forwarded-headers: "true"
    client-body-buffer-size: "100M"
    # client-body-timeout: 120
    # client-header-timeout: 120
    client-body-timeout: 3600
    client-header-timeout: 3600
    enable-brotli: "true"
    enable-real-ip: "true"
    forwarded-for-header: "CF-Connecting-IP"
    custom-http-errors: 404,403
    hsts-max-age: "31449600"
    keep-alive-requests: 10000
    keep-alive: 120
    large-client-header-buffers: "4 16k"
    # NOTE: borrowed from - https://github.com/andrewmackrodt/k3d-boot/blob/484c9e047f6b416a4063652d9855bfabc7c524b2/create.sh#L273C44-L273C64
    proxy-real-ip-cidr: "192.168.0.0/16, 172.16.0.0/12, 10.0.0.0/8"
    compute-full-forwarded-for: true
  extraArgs:
      default-ssl-certificate: "kube-system/tls-secret"
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
      namespace: kube-system
      namespaceSelector:
        any: true
defaultBackend:
  enabled: true
  image:
    repository: ghcr.io/tarampampam/error-pages
    tag: 2.26.0
  extraEnvs:
    - name: TEMPLATE_NAME
      value: ghost
    - name: SHOW_DETAILS
      value: "true"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["ingress-nginx"]
                - key: app.kubernetes.io/component
                  operator: In
                  values: ["default-backend"]
            topologyKey: kubernetes.io/hostname

    # NOTE: borrowed from - https://github.com/andrewmackrodt/k3d-boot/blob/484c9e047f6b416a4063652d9855bfabc7c524b2/create.sh#L273C44-L273C64
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist



# -- TCP service key-value pairs
## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
##
tcp:
  2746: "argo/argo-workflows-server:2746"
#  8080: "default/example-tcp-svc:9000"
  5432: databases/postgres-rw:5432



# -- UDP service key-value pairs
## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md
##
udp:
  53: "kube-system/kube-dns:53"

# -- Prefix for TCP and UDP ports names in ingress controller service
## Some cloud providers, like Yandex Cloud may have a requirements for a port name regex to support cloud load balancer integration
portNamePrefix: ""
# -- (string) A base64-encoded Diffie-Hellman parameter.
# This can be generated with: `openssl dhparam 4096 2> /dev/null | base64`
## Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param
dhParam: ""


############################################
# https://github.com/rafaribe/home-ops/blob/5f8a73ed4dc1e6b3efbd667f516cdd03f9da54f8/kubernetes/main/apps/networking/ingress-nginx/external/helmrelease.yaml
# fullnameOverride: nginx-external
# controller:
#   replicaCount: 3

#   extraEnvs:
#     - name: TZ
#       value: "${TZ}"

#   updateStrategy:
#     type: RollingUpdate

#   allowSnippetAnnotations: true
#   enableAnnotationValidations: true

#   service:
#     enabled: true
#     type: LoadBalancer
#     annotations:
#       io.cilium/lb-ipam-ips: ${LB_NGINX_EXTERNAL}
#     labels:
#       pool: lb
#     externalTrafficPolicy: Cluster

#   publishService:
#     enabled: true

#   ingressClassResource:
#     name: external-nginx
#     default: false
#     controllerValue: k8s.io/ingress-nginx-external

#   admissionWebhooks:
#     objectSelector:
#       matchExpressions:
#         - key: ingress-class
#           operator: In
#           values:
#             - external-nginx
#   config:
#     block-user-agents: "GPTBot,~*GPTBot*,ChatGPT-User,~*ChatGPT-User*,Google-Extended,~*Google-Extended*,CCBot,~*CCBot*,Omgilibot,~*Omgilibot*,FacebookBot,~*FacebookBot*" # taken from https://github.com/superseriousbusiness/gotosocial/blob/main/internal/web/robots.go
#     client-header-timeout: 120
#     client-body-buffer-size: "100M"
#     client-body-timeout: 120
#     custom-http-errors: 400,401,403,404,500,502,503,504
#     enable-brotli: "true"
#     enable-ocsp: "true"
#     enable-real-ip: "true"
#     hide-headers: Server,X-Powered-By
#     hsts-max-age: "31449600"
#     keep-alive: 120
#     keep-alive-requests: 10000
#     log-format-escape-json: "true"
#     log-format-upstream: >
#       {"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr",
#       "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
#       "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time,
#       "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
#       "path": "$uri", "request_query": "$args", "request_length": $request_length,
#       "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
#       "http_user_agent": "$http_user_agent"}
#     proxy-body-size: "100M"
#     proxy-buffering: "off"
#     proxy-read-timeout: "6000"
#     proxy-send-timeout: "6000"
#     ssl-protocols: "TLSv1.3 TLSv1.2"
#     use-forwarded-headers: "true"

#   metrics:
#     enabled: true
#     serviceMonitor:
#       enabled: true
#       namespace: networking
#       namespaceSelector:
#         any: true
#   extraArgs:
#     default-ssl-certificate: "networking/wildcard-default-certificate-tls"
#   podAnnotations:
#     configmap.reloader.stakater.com/reload: *proxiednetworks
# defaultBackend:
#   enabled: false
#   # image:
#   #   repository: ghcr.io/tarampampam/error-pages
#   #   tag: 2.25.0
#   # replicaCount: 1
#   # extraEnvs:
#   #   - name: TEMPLATE_NAME
#   #     value: lost-in-space
#   #   - name: SHOW_DETAILS
#   #     value: "false"
