# yaml-language-server: $schema=https://raw.githubusercontent.com/bossjones/k3d-playground/main/schema/external-secrets/v0.9.11/externalsecret_v1beta1.json
# The idea behind the SecretStore resource is to separate concerns of authentication/access and the actual Secret and configuration needed for workloads. The ExternalSecret specifies what to fetch, the SecretStore specifies how to access. This resource is namespaced.
---
# An ExternalSecret declares what data to fetch. It has a reference to a SecretStore which knows how to access that data. The controller uses that ExternalSecret as a blueprint to create secrets.
######################################################################
# ClusterSecretStore
# The ClusterSecretStore is a global, cluster-wide SecretStore that can be referenced from all namespaces. You can use it to provide a central gateway to your secret provider.
######################################################################
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: lldap
  namespace: default
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    name: lldap-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # App
        ## Random secret for JWT signature.
        ## This secret should be random, and should be shared with application
        ## servers that need to consume the JWTs.
        ## Changing this secret will invalidate all user sessions and require
        ## them to re-login.
        ## You should probably set it through the LLDAP_JWT_SECRET environment
        ## variable from a secret ".env" file.
        ## This can also be set from a file's contents by specifying the file path
        ## in the LLDAP_JWT_SECRET_FILE environment variable
        ## You can generate it with (on linux):
        ## LC_ALL=C tr -dc 'A-Za-z0-9!#%&'\''()*+,-./:;<=>?@[\]^_{|}~' </dev/urandom | head -c 32; echo ''
        LLDAP_JWT_SECRET: "{{ .LLDAP_JWT_SECRET }}"
        LLDAP_LDAP_USER_PASS: "{{ .LLDAP_LDAP_USER_PASS }}"
        LLDAP_LDAP_USER_DN: "{{ .LLDAP_USER_DN }}"
        LLDAP_LDAP_USER_EMAIL: "{{ .LLDAP_LDAP_USER_EMAIL }}"
        LLDAP_DATABASE_URL: "postgres://{{ .POSTGRES_USER }}:{{ .POSTGRES_PASS }}@postgres-rw.database.svc.cluster.local/lldap"
        LLDAP_KEY_SEED: "{{ .LLDAP_SERVER_KEY_SEED }}"
        # Postgres Init
        INIT_POSTGRES_DBNAME: lldap
        INIT_POSTGRES_HOST: postgres-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .POSTGRES_USER }}"
        INIT_POSTGRES_PASS: "{{ .POSTGRES_PASS }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - extract:
        key: lldap
    - extract:
        key: cloudnative-pg
