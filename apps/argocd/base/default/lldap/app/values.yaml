# dn: ou=people,dc=example,dc=org
# dn: cn=admin1,ou=people,dc=example,dc=org
# dn: cn=admin2,ou=people,dc=example,dc=org
# dn: cn=developer1,ou=people,dc=example,dc=org
# dn: cn=developer2,ou=people,dc=example,dc=org

# via: porkboi
controllers:
  main:
    replicas: 2
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    initContainers:
      init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: 16.1
          pullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: lldap-secret
    containers:
      main:
        image:
          repository: ghcr.io/lldap/lldap
          tag: v0.5.0
        env:
          TZ: America/New_York
          LLDAP_HTTP_PORT: &port 80
          LLDAP_HTTP_URL: https://lldap.k8s.localhost
          LLDAP_LDAP_PORT: &ldapPort 389
          LLDAP_LDAP_BASE_DN: dc=k8s,dc=localhost
        envFrom: *envFrom
        resources:
          requests:
            cpu: 5m
            memory: 36M
          limits:
            memory: 128M
    pod:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: lldap
service:
  main:
    ports:
      http:
        port: *port
      ldap:
        port: *ldapPort
ingress:
  main:
    enabled: true
    className: nginx
    annotations:
      # external-dns.alpha.kubernetes.io/target: k8s.localhost
      # external-dns.alpha.kubernetes.io/hostname: lldap.k8s.localhost
      nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/16
    hosts:
      - host: &host "{{ .Release.Name }}.k8s.localhost"
        paths:
          - path: /
            service:
              name: main
              port: http
    tls:
      - hosts:
          - *host
persistence:
  data:
    type: emptyDir
