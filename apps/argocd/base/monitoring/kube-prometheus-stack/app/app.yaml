apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: cluster
  sources:
  - repoURL: 'https://prometheus-community.github.io/helm-charts'
    chart: kube-prometheus-stack
    targetRevision: 56.2.0
    helm:
      releaseName: kube-prometheus-stack
      # Helm values files for overriding values in the helm chart
      # The path is relative to the spec.source.path directory defined above
      valueFiles:
        - $values/apps/argocd/base/monitoring/kube-prometheus-stack/app/values.yaml
  - repoURL: 'https://github.com/bossjones/k3d-playground.git' # Can point to either a Helm chart repo or a git repo.
    targetRevision: HEAD # For Helm, this refers to the chart version.
    path: apps/argocd/base/monitoring/kube-prometheus-stack # This has no meaning for Helm charts pulled directly from a Helm repo instead of git.
    ref: values # For Helm, acts as a reference to this source for fetching values files from this source. Has no meaning when under `source` field
  destination:
    # server: "https://kubernetes.default.svc"
    namespace: monitoring
    name: in-cluster
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      # allowEmpty: true
    syncOptions:
    # - Validate=false
    - CreateNamespace=true
    # Needed because our kubectl apply exceeds thresholds
    # EXAMPLE: CustomResourceDefinition.apiextensions.k8s.io "prometheuses.monitoring.coreos.com" is invalid: metadata.annotations: Too long: must have at most 262144 bytes
    # SOURCE: https://github.com/prometheus-operator/prometheus-operator/issues/4355
    - ServerSideApply=true
    # - PrunePropagationPolicy=foreground
    - PruneLast=true
    # - ApplyOutOfSyncOnly=false
    # - Prune=true
    - SkipDryRunOnMissingResource=true
      #     --resource stringArray                  Sync only specific resources as GROUP:KIND:NAME or !GROUP:KIND:NAME. Fields may be blank and '*' can be used. This option may be specified repeatedly
      # --retry-backoff-duration duration       Retry backoff base duration. Input needs to be a duration (e.g. 2m, 1h) (default 5s)
      # --retry-backoff-factor int              Factor multiplies the base duration after each failed retry (default 2)
      # --retry-backoff-max-duration duration   Max retry backoff duration. Input needs to be a duration (e.g. 2m, 1h) (default 3m0s)
      # --retry-limit int                       Max number of allowed sync retries
    - ApplyOutOfSyncOnly=true

    # NOTE: 2/12/2024 - IF THIS BREAKS, CONFIGURE IN THESE VALUES AND COMMENT OUT THE OTHER RETRY BLOCK
    # retry:
    #   limit: -1  # Max number of allowed sync retries
    #   backoff:
    #     duration: 20s # Retry backoff base duration. Input needs to be a duration (e.g. 2m, 1h) (default 5s)
    #     factor: 2 # Factor multiplies the base duration after each failed retry (default 2)
    #     maxDuration: 15m # Max retry backoff duration. Input needs to be a duration (e.g. 2m, 1h) (default 3m0s)
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
  # SOURCE: https://github.com/argoproj/argo-cd/issues/11074
  ignoreDifferences:
    - group: monitoring.coreos.com
      kind: ServiceMonitor
      jqPathExpressions:
      - .spec.endpoints[]?.relabelings[]?.action
    - group: monitoring.coreos.com
      kind: ServiceMonitor
      jqPathExpressions:
      - .spec.endpoints[]?.metricRelabelings[]?.action
    # SOURCE: https://github.com/home-prod/k8s-infra/blob/82cbe52ba47597b52a7fc03eee4d1b526beab836/kubernetes/charts/infra/charts/monitoring/charts/kube-prometheus-stack/templates/kube-prometheus-stack-application.yaml
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/failurePolicy
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      jsonPointers:
        - /webhooks/0/failurePolicy
    - kind: PersistentVolume
      jsonPointers:
        - /spec/claimRef/resourceVersion
        - /spec/claimRef/uid
        - /status/lastPhaseTransitionTime
    # SOURCE: https://github.com/rogerrum/k8s-gitops/blob/578d7a8cdd89dd940060e005942e567814dcf9f6/main/monitoring/values.yaml#L24
    # SOURCE: https://github.com/search?q=jqpathexpressions+metricRelabelings&type=code
    # - kind: MutatingWebhookConfiguration
    #   jsonPointers:
    #     - /webhooks/0/failurePolicy
    # - kind: ValidatingWebhookConfiguration
    #   jsonPointers:
    #     - /webhooks/0/failurePolicy
    # - kind: ServiceAccount
    #   jsonPointers:
    #     - /imagePullSecrets

# - name: blackbox-exporter
#   namespace: monitoring
#   path: main/monitoring/blackbox-exporter
#   manifest-paths: /main/monitoring/blackbox-exporter
#   sync-wave: "-1"
#   ignoreDifferences:
#     - group: "*"
#       kind: "ServiceMonitor"
#       jqPathExpressions:
#         - .spec.endpoints[].metricRelabelings
#   helm:
#     enabled: true
#   syncOptions:
#     - RespectIgnoreDifferences=true
