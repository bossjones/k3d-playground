---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bossjones/k3d-playground/main/schema/external-secrets/v0.9.11/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: cloudnative-pg
  namespace: databases
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: 1password
  target:
    name: cloudnative-pg
    creationPolicy: Owner
    template:
      engineVersion: v2
      metadata:
        labels:
          cnpg.io/reload: "true"
      # Use inline templates to construct your desired config file that contains your secret
      data:
        POSTGRES_SUPER_USER: "authentik"
        POSTGRES_SUPER_PASS: "8edF6sRQjx"
        AWS_ACCESS_KEY_ID: "admin"
        AWS_SECRET_ACCESS_KEY: "password"
        # SOURCE: https://github.com/cloudnative-pg/cloudnative-pg/blob/89a46c9904f6220e06a28f463697b98ba90bc746/docs/src/samples/cluster-example-secret.yaml
        username: "authentik"
        password: "8edF6sRQjx"

  # Used to fetch all properties from the Provider key
  # If multiple dataFrom are specified, secrets are merged in the specified order
  # Can be defined using sourceRef.generatorRef or extract / find
  # Both use cases are exemplified below
  dataFrom:
    - extract:
        key: Authentik
      rewrite:
        - regexp:
            source: "(.*)"
            target: "authentik_$1"

  # data:
  #   - secretKey: username
  #     remoteRef:
  #       key: cloudnative-pg
  #       property: POSTGRES_SUPER_USER
  #   - secretKey: password
  #     remoteRef:
  #       key: cloudnative-pg
  #       property: POSTGRES_SUPER_PASS
  #   - secretKey: aws-access-key-id
  #     remoteRef:
  #       key: cloudnative-pg
  #       property: AWS_ACCESS_KEY_ID
  #   - secretKey: aws-secret-access-key
  #     remoteRef:
  #       key: cloudnative-pg
  #       property: AWS_SECRET_ACCESS_KEY


# accesskey: admin
#   secretkey: password
# SOURCE: https://github.com/cloudnative-pg/cloudnative-pg/blob/89a46c9904f6220e06a28f463697b98ba90bc746/docs/src/bootstrap.md?plain=1#L330
---
apiVersion: v1
data:
  username: YXV0aGVudGlr
  password: OGVkRjZzUlFqeA==
kind: Secret
metadata:
  name: authentik-secret
  namespace: databases
type: kubernetes.io/basic-auth
