# yaml-language-server: $schema=https://raw.githubusercontent.com/bossjones/k3d-playground/main/schema/cloudnative-pg/v1.22.1/cluster_v1.json
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres
  namespace: databases
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-15
  enableSuperuserAccess: true
  primaryUpdateStrategy: unsupervised
  storage:
    size: 2Gi
    storageClass: local-path
  superuserSecret:
    name: cloudnative-pg
  postgresql:
      parameters:
        max_connections: "600"
        shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "4Gi"
  nodeMaintenanceWindow:
    reusePVC: false
  # affinity:
  #   tolerations:
  #   - key: "arm"
  #     operator: "Exists"
  # backup:
  #   retentionPolicy: 3d
  #   barmanObjectStore:
  #     wal:
  #       compression: bzip2
  #       maxParallel: 8
  #     destinationPath: s3://postgresql/
  #     endpointURL: http://minio.databases:9000
  #     serverName: postgres
  #     s3Credentials:
  #       accessKeyId:
  #         name: cloudnative-pg-secret
  #         key: aws-access-key-id
  #       secretAccessKey:
  #         name: cloudnative-pg-secret
  #         key: aws-secret-access-key

  # bootstrap:
  #   # use this to recover a net-new cluster from a backup
  #   recovery:
  #     source: postgres-backup

    # # use this to 'migrate' from an existing cnpg cluster (e.g. "cluster-pg14") to the new cluster
    # initdb:
    #   import:
    #     type: monolith
    #     databases:
    #       - "*"
    #     roles:
    #       - "*"
    #     source:
    #       externalCluster: cluster-pg14

  externalClusters:
    # this represents the s3 backup to restore from. *nota-bene: the backup must be the same major version of the target cluster
    - name: postgres-backup
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://postgresql/
        endpointURL: http://minio.databases:9000
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key

    # # this represents an existing cnpg cluster to migrate from (e.g. upgrading from postgres v14 to postgres v15)
    # - name: cluster-pg14
    #   connectionParameters:
    #     host: postgres-rw.default.svc.cluster.local
    #     user: postgres
    #     dbname: postgres
    #     sslmode: require
    #   password:
    #     name: cloudnative-pg-secret
    #     key: password
