apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # application.resourceTrackingMethod: annotation
  # url: "https://argocd.k8s.localhost"
  statusbadge.enabled: "true"
  exec.enabled: "true"
  # kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
  kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"

  # # The metadata.label key name where Argo CD injects the app name as a tracking label (optional).
  # # Tracking labels are used to determine which resources need to be deleted when pruning.
  # # If omitted, Argo CD injects the app name into the label: 'app.kubernetes.io/instance'
  # # Ref: https://github.com/argoproj/argo-cd/blob/15b0785ba4d819c5e03a970624b68bc52d721d4b/docs/operator-manual/argocd-cm.yaml
  # application.instanceLabelKey: app.bosslab.com/instance

  # # Custom Health Checks.
  # # Docs - https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#way-1-define-a-custom-health-check-in-argocd-cm-configmap
  # # Existing health checks are available at https://github.com/argoproj/argo-cd/tree/master/resource_customizations
  # #

  # # SOURCE: https://codefresh.io/blog/argo-cd-application-dependencies/
  # resource.customizations.health.argoproj.io_Application: |
  #   hs = {}
  #   hs.status = "Progressing"
  #   hs.message = ""
  #   if obj.status ~= nil then
  #     if obj.status.health ~= nil then
  #       hs.status = obj.status.health.status
  #       if obj.status.health.message ~= nil then
  #         hs.message = obj.status.health.message
  #       end
  #     end
  #   end
  #   return hs
