apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
data:
  # application.resourceTrackingMethod: annotation
  # url: "https://argocd.k8s.localhost"
  statusbadge.enabled: "true"
  exec.enabled: "true"
  server.rbac.log.enforce.enable: "true"
  # kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
  kustomize.buildOptions: "--enable-alpha-plugins --enable-exec"
  # FIXME: Note, this could cause a bunch of stuff to break
  # SOURCE: https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/
  resource.ignoreResourceUpdatesEnabled: "true"


  resource.customizations.health.argoproj.io_Application: |
    hs = {}
    hs.status = "Progressing"
    hs.message = ""
    if obj.status ~= nil then
      if obj.status.health ~= nil then
        hs.status = obj.status.health.status
        if obj.status.health.message ~= nil then
          hs.message = obj.status.health.message
        end
      end
    end
    return hs

  # SOURCE: https://github.com/rowa78/k8s-gitops/blob/76c364f5c1f73cbe19339575e8aec069b9bf31ac/pi-cluster/bootstrap/argocd/values.yaml#L110
  resource.customizations.actions.external-secrets.io_ExternalSecret: |
    discovery.lua: |
      actions = {}
      actions["trigger secret refresh"] = {}
      return actions
    definitions:
      - name: trigger secret refresh
        action.lua: |
          local os = require("os")
          if obj.metadata == nil then
            obj.metadata = {}
          end
          if obj.metadata.annotations == nil then
            obj.metadata.annotations = {}
          end
          obj.metadata.annotations["force-sync"] = tostring(os.time(os.date("!*t")))
          return obj
  # SOURCE: https://github.com/rowa78/k8s-gitops/blob/76c364f5c1f73cbe19339575e8aec069b9bf31ac/pi-cluster/bootstrap/argocd/values.yaml#L110
  resource.customizations.ignoreDifferences.apiextensions.k8s.io_CustomResourceDefinition: |
    jqPathExpressions:
      - '.spec.conversion.webhook.clientConfig.caBundle'
      - '.spec.versions[]?.additionalPrinterColumns[]?.priority | select(. == 0)'
  # # The metadata.label key name where Argo CD injects the app name as a tracking label (optional).
  # # Tracking labels are used to determine which resources need to be deleted when pruning.
  # # If omitted, Argo CD injects the app name into the label: 'app.kubernetes.io/instance'
  # # Ref: https://github.com/argoproj/argo-cd/blob/15b0785ba4d819c5e03a970624b68bc52d721d4b/docs/operator-manual/argocd-cm.yaml
  # application.instanceLabelKey: app.bosslab.com/instance

  # # Custom Health Checks.
  # # Docs - https://argo-cd.readthedocs.io/en/stable/operator-manual/health/#way-1-define-a-custom-health-check-in-argocd-cm-configmap
  # # Existing health checks are available at https://github.com/argoproj/argo-cd/tree/master/resource_customizations
  # #

  # # SOURCE: https://codefresh.io/blog/argo-cd-application-dependencies/
  # resource.customizations.health.argoproj.io_Application: |
  #   hs = {}
  #   hs.status = "Progressing"
  #   hs.message = ""
  #   if obj.status ~= nil then
  #     if obj.status.health ~= nil then
  #       hs.status = obj.status.health.status
  #       if obj.status.health.message ~= nil then
  #         hs.message = obj.status.health.message
  #       end
  #     end
  #   end
  #   return hs

# # Adding health checks to argocd to prevent pvc resources
# # that aren't bound state from blocking deployments
#   resourceHealthChecks:
#   - kind: PersistentVolumeClaim
#     check: |
#       hs = {}
#       if obj.status ~= nil then
#         if obj.status.phase ~= nil then
#           if obj.status.phase == "Pending" then
#             hs.status = "Healthy"
#             hs.message = obj.status.phase
#             return hs
#           elseif obj.status.phase == "Bound" then
#             hs.status = "Healthy"
#             hs.message = obj.status.phase
#             return hs
#           end
#         end
#       end
#       hs.status = "Progressing"
#       hs.message = "Waiting for PVC"
#       return hs

  # SOURCE: https://github.com/gnunn-gitops/acm-hub-bootstrap/blob/77a03f533c0504340d9803f21230ac1b18fd6e53/components/policies/gitops/base/manifests/gitops-instance/base/argocd.yaml#L13
  resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret: |
    jsonPointers:
    - /status/refreshTime
  # resource.customizations.ignoreResourceUpdates.ocs.openshift.io_StorageCluster: |
  #   jsonPointers:
  #   - /status
  #   - /metadata/resourceVersion
  # resource.customizations.ignoreResourceUpdates.ocs.openshift.io_StorageSystem: |
  #   jsonPointers:
  #   - /status
  #   - /metadata/resourceVersion
  # resource.customizations.ignoreResourceUpdates.noobaa.io_Noobaa: |
  #   jsonPointers:
  #   - /status
  #   - /metadata/resourceVersion
  # resource.customizations.ignoreResourceUpdates.noobaa.io_BackingStore: |
  #   jsonPointers:
  #   - /status
  #   - /metadata/resourceVersion
