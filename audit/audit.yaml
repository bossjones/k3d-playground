# SOURCE: https://github.com/manno/fleet-dev-tools/blob/ae58f3d6ec25f42466bafb541027edc6bdf64580/bin/setup-k3d-audit.sh#L29
# apiVersion: audit.k8s.io/v1
# kind: Policy
# omitStages:
# - "RequestReceived"
# rules:
# - level: Metadata
#   resources:
#   - group: ""
#     resources: ["pods"]
#   namespaces: ["monitoring"]
# - level: Metadata
#   resources:
#   - group: ""
#     resources: ["pods"]
#   namespaces: ["cattle-fleet-system"]
# - level: None
#   resources:
#   - group: "apps"
#     resources: ["deployments"]
#   namespaces: ["kube-system"]
# - level: RequestResponse
#   resources:
#   - group: "apps"
#     resources: ["deployments"]
# - level: None

# SOURCE: https://github.com/liggitt/audit2rbac/blob/master/testdata/demo-policy.yaml
# # SOURCE: https://github.com/anasinnyk/oslo.rs/blob/52725a20a5794b58a2924d9f278b8d749eda8c3a/justfile#L97
kind: "Policy"
apiVersion: "audit.k8s.io/v1"
rules:
- level: Metadata
  users:
  # - system:admin
  # # - system:serviceaccount:default:doc-controller
  # # - system:serviceaccount:monitoring:prometheus-k8s
  # # - system:serviceaccount:monitoring:kube-prometheus-stack-prometheus
  # # - system:serviceaccount:monitoring:kube-prometheus-stack-operator
  # # - system:serviceaccount:monitoring:kube-prometheus-stack-kube-state-metrics
  # # - system:serviceaccount:monitoring:kube-prometheus-stack-prometheus-node-exporter
  # # - system:serviceaccount:monitoring:kube-prometheus-stack-grafana
  # # - system:serviceaccount:monitoring:loki-distributed
  # - system:serviceaccount:kube-system:ingress-nginx-backend
  # - system:serviceaccount:kube-system:ingress-nginx
  # # - system:serviceaccount:argocd:argocd-notifications-controller
  # # - system:serviceaccount:argocd:argocd-application-controller
  # # - system:serviceaccount:argocd:argocd-dex-server
  # # - system:serviceaccount:argocd:argocd-applicationset-controller
  # # - system:serviceaccount:argocd:argocd-repo-server
  # # - system:serviceaccount:argocd:argocd-server
  # # - system:serviceaccount:argocd:argocd-redis
  # # - system:serviceaccount:argo-rollouts:default
  # # - system:serviceaccount:argo-rollouts:argo-rollouts
  ######################################################################
  # FIXME: Figure out what it doesn't like here
  # - system:admin
  # - system:serviceaccount:argo-rollouts:argo-rollouts
  # - system:serviceaccount:argo-rollouts:default
  # - system:serviceaccount:argocd:argocd-application-controller
  # - system:serviceaccount:argocd:argocd-applicationset-controller
  # - system:serviceaccount:argocd:argocd-dex-server
  # - system:serviceaccount:argocd:argocd-notifications-controller
  # - system:serviceaccount:argocd:argocd-redis
  # - system:serviceaccount:argocd:argocd-repo-server
  # - system:serviceaccount:argocd:argocd-server
  # - system:serviceaccount:argocd:default
  # - system:serviceaccount:default:doc-controller
  - system:serviceaccount:kube-system:coredns
  - system:serviceaccount:kube-system:node-controller
  # - system:serviceaccount:kube-system:ingress-nginx
  # - system:serviceaccount:kube-system:ingress-nginx-backend
  # - system:serviceaccount:kube-system:local-path-provisioner-service-account
  # - system:serviceaccount:kube-system:metrics-server
  # - system:serviceaccount:monitoring:default
  # - system:serviceaccount:monitoring:k8s-event-logger
  # - system:serviceaccount:monitoring:kube-prometheus-stack-alertmanager
  # - system:serviceaccount:monitoring:kube-prometheus-stack-grafana
  # - system:serviceaccount:monitoring:kube-prometheus-stack-kube-state-metrics
  # - system:serviceaccount:monitoring:kube-prometheus-stack-operator
  # - system:serviceaccount:monitoring:kube-prometheus-stack-prometheus
  # - system:serviceaccount:monitoring:kube-prometheus-stack-prometheus-node-exporter
  # - system:serviceaccount:monitoring:loki-distributed
  # - system:serviceaccount:monitoring:loki-loki-distributed
  # - system:serviceaccount:monitoring:prometheus-k8s
  # - system:serviceaccount:monitoring:vector
  omitStages:
  - RequestReceived
  - ResponseStarted
  - Panic
# ########################################################################################
# # FIXME: when the time is right use this

# # # Originally sourced from the GCE audit policy (v1.11.1)
# # # https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/gci/configure-helper.sh#L712
# # ---
# # apiVersion: audit.k8s.io/v1
# # kind: Policy
# # rules:
#   # Reduce noise from spammy service accounts and components
#   # Don't log kube-proxy steady state reads
#   - level: None
#     users: ["system:kube-proxy"]
#     verbs: ["watch"]
#     resources:
#       - group: ""
#         resources: ["endpoints", "services", "services/status"]
#   # Don't log prometheus-operator steady state reads
#   - level: None
#     users: ["system:serviceaccount:monitoring:prometheus-operator"]
#     verbs: ["get", "list", "watch"]
#     resources:
#       - group: ""
#         resources: ["secrets", "services", "configmaps"]
#   - level: None
#     users: ["system:serviceaccount:monitoring:prometheus-k8s"]
#     verbs: ["list"]
#     resources:
#       - group: ""
#         resources: ["endpoints", "services", "pods"]
#   - level: None
#     users: ["system:serviceaccount:opa:default"]
#     verbs: ["patch"]
#     resources:
#       - group: ""
#         resources: ["configmaps"]
#   - level: None
#     users: ["kubelet"]  # legacy kubelet identity
#     verbs: ["get"]
#     resources:
#       - group: ""
#         resources: ["nodes", "nodes/status"]
#   # Don't log Node status reads or lease renewals
#   - level: None
#     userGroups: ["system:nodes"]
#     verbs: ["get"]
#     resources:
#       - group: ""
#         resources: ["nodes", "nodes/status"]
#   - level: None
#     userGroups: ["system:nodes"]
#     verbs: ["get", "update"]
#     resources:
#       - group: ""
#         resources: ["nodes", "nodes/status"]
#       - group: coordination.k8s.io
#         resources: ["leases"]
#   - level: None
#     users:
#       - system:kube-controller-manager
#       - system:kube-scheduler
#       - system:serviceaccount:kube-system:endpoint-controller
#     verbs: ["get", "update"]
#     namespaces: ["kube-system"]
#     resources:
#       - group: ""
#         resources: ["endpoints"]
#   - level: None
#     users: ["system:apiserver"]
#     verbs: ["get"]
#     resources:
#       - group: ""
#         resources: ["namespaces", "namespaces/status", "namespaces/finalize"]
#   - level: None
#     users: ["system:apiserver"]
#     verbs: ["list"]
#     resources:
#       - group: ""
#         resources: ["initializerconfigurations"]
#   # Don't log HPA fetching metrics.
#   - level: None
#     users:
#       - system:kube-controller-manager
#     verbs: ["get", "list"]
#     resources:
#       - group: "metrics.k8s.io"
#   # Don't log these read-only URLs.
#   - level: None
#     nonResourceURLs:
#       - /healthz*
#       - /version
#       - /swagger*
#   # Don't log events requests.
#   - level: None
#     resources:
#       - group: ""
#         resources: ["events"]
#   # node and pod status calls from nodes are high-volume and can be large, don't log responses for expected updates from nodes
#   - level: Request
#     users:
#       - "kubelet"
#       - "system:node-problem-detector"
#       - "system:serviceaccount:kube-system:node-problem-detector"
#     verbs: ["update", "patch"]
#     resources:
#       - group: ""
#         resources: ["nodes/status", "pods/status"]
#     omitStages:
#       - "RequestReceived"
#   - level: Request
#     userGroups: ["system:nodes"]
#     verbs: ["update", "patch"]
#     resources:
#       - group: ""
#         resources: ["nodes/status", "pods/status"]
#     omitStages:
#       - "RequestReceived"
#   # deletecollection calls can be large, don't log responses for expected namespace deletions
#   - level: Request
#     users: ["system:serviceaccount:kube-system:namespace-controller"]
#     verbs: ["deletecollection"]
#     omitStages:
#       - "RequestReceived"
#   # deletecollection calls can be large, don't log responses for expected namespace deletions
#   - level: Request
#     users: ["system:serviceaccount:kube-system:namespace-controller"]
#     verbs: ["deletecollection"]
#     omitStages:
#       - "RequestReceived"
#   # Secrets, ConfigMaps, and TokenReviews can contain sensitive & binary data,
#   # so only log at the Metadata level.
#   - level: Metadata
#     resources:
#       - group: ""
#         resources: ["secrets", "configmaps"]
#       - group: authentication.k8s.io
#         resources: ["tokenreviews"]
#     omitStages:
#       - "RequestReceived"
#   # Get responses can be large; skip them.
#   - level: Request
#     verbs: ["get", "list", "watch"]
#     resources:
#       - group: ""
#       - group: "aadpodidentity.k8s.io"
#       - group: "admissionregistration.k8s.io"
#       - group: "adobeplatform.adobe.io"
#       - group: "apiextensions.k8s.io"
#       - group: "apiregistration.k8s.io"
#       - group: "apps"
#       - group: "authentication.k8s.io"
#       - group: "authorization.k8s.io"
#       - group: "autoscaling"
#       - group: "autoscaling.k8s.io"
#       - group: "batch"
#       - group: "certificates.k8s.io"
#       - group: "cilium.io"
#       - group: "contour.heptio.com"
#       - group: "coordination.k8s.io"
#       - group: "extensions"
#       - group: "metrics.k8s.io"
#       - group: "monitoring.coreos.com"
#       - group: "networking.k8s.io"
#       - group: "node.k8s.io"
#       - group: "pdm.adobe.io"
#       - group: "policy"
#       - group: "projectcontour.io"
#       - group: "rbac.authorization.k8s.io"
#       - group: "scaling.k8s.restdev.com"
#       - group: "scheduling.k8s.io"
#       - group: "settings.k8s.io"
#       - group: "storage.k8s.io"
#       - group: "velero.io"
#     omitStages:
#       - "RequestReceived"
#   # Default level for known APIs
#   - level: RequestResponse
#     resources:
#       - group: ""
#       - group: "aadpodidentity.k8s.io"
#       - group: "admissionregistration.k8s.io"
#       - group: "adobeplatform.adobe.io"
#       - group: "apiextensions.k8s.io"
#       - group: "apiregistration.k8s.io"
#       - group: "apps"
#       - group: "authentication.k8s.io"
#       - group: "authorization.k8s.io"
#       - group: "autoscaling"
#       - group: "autoscaling.k8s.io"
#       - group: "batch"
#       - group: "certificates.k8s.io"
#       - group: "cilium.io"
#       - group: "contour.heptio.com"
#       - group: "coordination.k8s.io"
#       - group: "extensions"
#       - group: "metrics.k8s.io"
#       - group: "monitoring.coreos.com"
#       - group: "networking.k8s.io"
#       - group: "node.k8s.io"
#       - group: "pdm.adobe.io"
#       - group: "policy"
#       - group: "projectcontour.io"
#       - group: "rbac.authorization.k8s.io"
#       - group: "scaling.k8s.restdev.com"
#       - group: "scheduling.k8s.io"
#       - group: "settings.k8s.io"
#       - group: "storage.k8s.io"
#       - group: "velero.io"
#     omitStages:
#       - "RequestReceived"
#   # Default level for all other requests.
#   - level: Metadata
#     omitStages:
#       - "RequestReceived"
