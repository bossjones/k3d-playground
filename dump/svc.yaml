apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:28:53Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "192"
    uid: 2f2e8cfb-8cdb-465a-9d75-19368674cba7
  spec:
    clusterIP: 10.43.0.1
    clusterIPs:
    - 10.43.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/4yRwY7TMBCGXwXN2Qlx026zljig3QtCQistcEEcHGdKTRKP5ZkWoSrvjtxmRWEV2Fui+fzpn39OYKP/jIk9BTBw1KCg96EDA4+Yjt4hKBhRbGfFgjmBDYHEiqfA+Zfa7+iEUcrkqXRWZMDS02ufDaAW5/QjYCq+HXsw0Nd8NTlq9eq9D92bt11H4b+KYEcEA44SdoFfhHO0Lr/pDy0W/JMFR1AQE40oezxwpiMlAQO3elM/m7FLNmaBpAPCpGCwLQ7nOvqGCxvjk/ySKH+mgILn1244sGAqeK531vyNzXvdUcL7D4//2GtveQ8GWoerpl7dNo3W23Vtq7q5se1GV7vV7maLu+16ta7cZpvzzu6riEu1TAo4osurzbnfPYABXZXruqxKXeVyKAmD+XJ68l6UlwY39bk9IUcDGPh0/wCTuiYLcXGJ/nj3Bz2iJO9+u/NxnvNfFTAO6ITSwkWmafoVAAD//yO4Hor3AgAA
      objectset.rio.cattle.io/id: ""
      objectset.rio.cattle.io/owner-gvk: k3s.cattle.io/v1, Kind=Addon
      objectset.rio.cattle.io/owner-name: coredns
      objectset.rio.cattle.io/owner-namespace: kube-system
      prometheus.io/port: "9153"
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-01-25T17:28:55Z"
    labels:
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      objectset.rio.cattle.io/hash: bce283298811743a0386ab510f2f67ef74240c57
    name: kube-dns
    namespace: kube-system
    resourceVersion: "252"
    uid: ed372120-0893-4e83-993d-c0c0a91da775
  spec:
    clusterIP: 10.43.0.10
    clusterIPs:
    - 10.43.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"postgres"},"name":"postgres-operator","namespace":"databases"},"spec":{"ports":[{"port":8080,"protocol":"TCP","targetPort":8080}],"selector":{"name":"postgres-operator"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:30:40Z"
    labels:
      app.kubernetes.io/instance: postgres
    name: postgres-operator
    namespace: databases
    resourceVersion: "1596"
    uid: b3bc3fb6-0130-4982-ba30-b7861aeb36ec
  spec:
    clusterIP: 10.43.184.197
    clusterIPs:
    - 10.43.184.197
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: postgres-operator
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"postgres","application":"postgres-operator-ui"},"name":"postgres-operator-ui","namespace":"databases"},"spec":{"ports":[{"port":80,"protocol":"TCP","targetPort":8081}],"selector":{"name":"postgres-operator-ui"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:30:40Z"
    labels:
      app.kubernetes.io/instance: postgres
      application: postgres-operator-ui
    name: postgres-operator-ui
    namespace: databases
    resourceVersion: "1598"
    uid: de87febd-d5d4-4f7b-ab7a-e166e97ceb1c
  spec:
    clusterIP: 10.43.165.107
    clusterIPs:
    - 10.43.165.107
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8081
    selector:
      name: postgres-operator-ui
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"whoami","app.kubernetes.io/instance":"example-app"},"name":"whoami-svc","namespace":"example"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80}],"selector":{"app":"whoami"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:31:24Z"
    labels:
      app: whoami
      app.kubernetes.io/instance: example-app
    name: whoami-svc
    namespace: example
    resourceVersion: "1761"
    uid: 184ef77e-f56d-428b-9e3a-e2c43bf8976e
  spec:
    clusterIP: 10.43.38.174
    clusterIPs:
    - 10.43.38.174
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    selector:
      app: whoami
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:31:24Z"
    labels:
      application: spilo
      cluster-name: minimal-db
      spilo-role: master
      team: acid
    name: minimal-db
    namespace: example
    resourceVersion: "1798"
    uid: 10bed9d6-dc70-4d33-ae70-f7c99dd7880f
  spec:
    clusterIP: 10.43.204.199
    clusterIPs:
    - 10.43.204.199
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:31:24Z"
    labels:
      application: spilo
      cluster-name: minimal-db
      spilo-role: replica
      team: acid
    name: minimal-db-repl
    namespace: example
    resourceVersion: "1801"
    uid: 1c4b52d0-b229-41f7-87d8-03e37ed98c90
  spec:
    clusterIP: 10.43.112.252
    clusterIPs:
    - 10.43.112.252
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      application: spilo
      cluster-name: minimal-db
      spilo-role: replica
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:32Z"
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vector
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vector
      app.kubernetes.io/version: 0.35.0-distroless-libc
      helm.sh/chart: vector-0.30.0
    name: vector-headless
    namespace: monitoring
    resourceVersion: "1978"
    uid: 77dc8f85-494c-4fdc-9a3d-6e977be47fde
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vector
      app.kubernetes.io/name: vector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:32Z"
    labels:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vector
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: vector
      app.kubernetes.io/version: 0.35.0-distroless-libc
      helm.sh/chart: vector-0.30.0
    name: vector
    namespace: monitoring
    resourceVersion: "1980"
    uid: bbd387c4-8f85-4b80-87b6-4dee27a53edf
  spec:
    clusterIP: 10.43.164.27
    clusterIPs:
    - 10.43.164.27
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9090
      protocol: TCP
      targetPort: 9090
    selector:
      app.kubernetes.io/component: Agent
      app.kubernetes.io/instance: vector
      app.kubernetes.io/name: vector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"template-app"},"name":"podinfo","namespace":"development"},"spec":{"ports":[{"name":"http","port":9898,"protocol":"TCP","targetPort":"http"},{"name":"grpc","port":9999,"protocol":"TCP","targetPort":"grpc"}],"selector":{"app":"podinfo"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:32:32Z"
    labels:
      app.kubernetes.io/instance: template-app
    name: podinfo
    namespace: development
    resourceVersion: "2020"
    uid: 7a023cf5-3479-4528-a326-6b3dfc128049
  spec:
    clusterIP: 10.43.70.9
    clusterIPs:
    - 10.43.70.9
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 9898
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9999
      protocol: TCP
      targetPort: grpc
    selector:
      app: podinfo
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-memberlist
    namespace: monitoring
    resourceVersion: "2052"
    uid: acbaa331-1e46-4cc3-bdbb-ea39d3eb31ee
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp
      port: 7946
      protocol: TCP
      targetPort: http-memberlist
    selector:
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/part-of: memberlist
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
      prometheus.io/service-monitor: "false"
    name: loki-loki-distributed-query-frontend-headless
    namespace: monitoring
    resourceVersion: "2053"
    uid: fd28fd52-ae03-4f3b-a937-17e4e7d04684
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    - name: grpclb
      port: 9096
      protocol: TCP
      targetPort: grpc
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
      prometheus.io/service-monitor: "false"
    name: loki-loki-distributed-querier-headless
    namespace: monitoring
    resourceVersion: "2054"
    uid: 253e54a6-f758-4b87-bf27-98f245f5fb87
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/name: loki-distributed
      prometheus.io/service-monitor: "false"
    name: loki-loki-distributed-ingester-headless
    namespace: monitoring
    resourceVersion: "2055"
    uid: 11b8f87b-35df-4c68-8954-fd29d0d8fadc
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-distributor
    namespace: monitoring
    resourceVersion: "2064"
    uid: 8370b58a-334d-46ab-a02d-03c80b8a1fa3
  spec:
    clusterIP: 10.43.88.26
    clusterIPs:
    - 10.43.88.26
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: distributor
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-querier
    namespace: monitoring
    resourceVersion: "2073"
    uid: 0af84bdc-8596-47a2-b62d-d292b40a87ae
  spec:
    clusterIP: 10.43.81.61
    clusterIPs:
    - 10.43.81.61
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: querier
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-ingester
    namespace: monitoring
    resourceVersion: "2077"
    uid: bb70249a-fdac-4bc7-a9c7-194d147d77a3
  spec:
    clusterIP: 10.43.114.143
    clusterIPs:
    - 10.43.114.143
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    selector:
      app.kubernetes.io/component: ingester
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app: minio
      app.kubernetes.io/instance: loki-distributed
      monitoring: prometheus
      prometheus: main
    name: minio
    namespace: monitoring
    resourceVersion: "2082"
    uid: 60965bfc-0e38-4f3a-9e12-228c3cd4ebcc
  spec:
    clusterIP: 10.43.47.132
    clusterIPs:
    - 10.43.47.132
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: api
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: dashboard
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app: minio
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-gateway
    namespace: monitoring
    resourceVersion: "2087"
    uid: 3d7a6bf5-a005-4bac-96fa-2a8248340367
  spec:
    clusterIP: 10.43.248.22
    clusterIPs:
    - 10.43.248.22
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: gateway
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:33Z"
    labels:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki-distributed
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: loki-distributed
      app.kubernetes.io/version: 2.8.3
      helm.sh/chart: loki-distributed-0.71.1
    name: loki-loki-distributed-query-frontend
    namespace: monitoring
    resourceVersion: "2090"
    uid: faf2c6b2-d7c1-482f-8b79-b5d6bf390131
  spec:
    clusterIP: 10.43.143.199
    clusterIPs:
    - 10.43.143.199
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 3100
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    - name: grpclb
      port: 9096
      protocol: TCP
      targetPort: grpc
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: query-frontend
      app.kubernetes.io/instance: loki
      app.kubernetes.io/name: loki-distributed
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"argo-rollouts","app.kubernetes.io/name":"argo-rollouts-metrics","app.kubernetes.io/part-of":"argo-rollouts"},"name":"argo-rollouts-metrics","namespace":"argo-rollouts"},"spec":{"ports":[{"name":"metrics","port":8090,"protocol":"TCP","targetPort":8090}],"selector":{"app.kubernetes.io/name":"argo-rollouts"}}}
    creationTimestamp: "2024-01-25T17:32:41Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argo-rollouts
      app.kubernetes.io/name: argo-rollouts-metrics
      app.kubernetes.io/part-of: argo-rollouts
    name: argo-rollouts-metrics
    namespace: argo-rollouts
    resourceVersion: "2289"
    uid: 604876fb-e6f7-4a86-b14f-56f34efaaf5f
  spec:
    clusterIP: 10.43.221.151
    clusterIPs:
    - 10.43.221.151
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 8090
      protocol: TCP
      targetPort: 8090
    selector:
      app.kubernetes.io/name: argo-rollouts
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 10.0.2
      helm.sh/chart: grafana-6.58.6
    name: kube-prometheus-stack-grafana
    namespace: monitoring
    resourceVersion: "2570"
    uid: a133a96f-23e9-4e10-abc0-006abd7d7d4d
  spec:
    clusterIP: 10.43.117.71
    clusterIPs:
    - 10.43.117.71
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-web
      port: 80
      protocol: TCP
      targetPort: 3000
    selector:
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/name: grafana
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.9.2
      helm.sh/chart: kube-state-metrics-5.10.1
      release: kube-prometheus-stack
    name: kube-prometheus-stack-kube-state-metrics
    namespace: monitoring
    resourceVersion: "2574"
    uid: b1c5c4fd-2256-4c73-906a-f4b9dfbda4e6
  spec:
    clusterIP: 10.43.42.234
    clusterIPs:
    - 10.43.42.234
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/name: kube-state-metrics
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/scrape: "true"
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: prometheus-node-exporter
      app.kubernetes.io/part-of: prometheus-node-exporter
      app.kubernetes.io/version: 1.6.0
      helm.sh/chart: prometheus-node-exporter-4.21.0
      jobLabel: node-exporter
      release: kube-prometheus-stack
    name: kube-prometheus-stack-prometheus-node-exporter
    namespace: monitoring
    resourceVersion: "2587"
    uid: 23ba5e1d-6d2a-4d4d-ae52-ab0578f4a4bd
  spec:
    clusterIP: 10.43.94.133
    clusterIPs:
    - 10.43.94.133
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9100
      protocol: TCP
      targetPort: 9100
    selector:
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/name: prometheus-node-exporter
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:33:26Z"
    labels:
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: kubelet
      k8s-app: kubelet
    name: kube-prometheus-stack-kubelet
    namespace: kube-system
    resourceVersion: "3117"
    uid: b2dc78bc-2cb2-4083-8c40-c0440b256ecd
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    - IPv6
    ipFamilyPolicy: RequireDualStack
    ports:
    - name: https-metrics
      port: 10250
      protocol: TCP
      targetPort: 10250
    - name: http-metrics
      port: 10255
      protocol: TCP
      targetPort: 10255
    - name: cadvisor
      port: 4194
      protocol: TCP
      targetPort: 4194
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:33:26Z"
    labels:
      operated-alertmanager: "true"
    name: alertmanager-operated
    namespace: monitoring
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: Alertmanager
      name: kube-prometheus-stack-alertmanager
      uid: 376efccc-3b52-41f8-9b2c-1e33354ca069
    resourceVersion: "3122"
    uid: 15b3f73b-ef54-4e87-a4f0-bd07be30a814
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-web
      port: 9093
      protocol: TCP
      targetPort: http-web
    - name: tcp-mesh
      port: 9094
      protocol: TCP
      targetPort: 9094
    - name: udp-mesh
      port: 9094
      protocol: UDP
      targetPort: 9094
    selector:
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:33:26Z"
    labels:
      operated-prometheus: "true"
    name: prometheus-operated
    namespace: monitoring
    ownerReferences:
    - apiVersion: monitoring.coreos.com/v1
      kind: Prometheus
      name: kube-prometheus-stack-prometheus
      uid: 353cfc97-56c0-431f-a060-af39c0001475
    resourceVersion: "3146"
    uid: 7b222689-11c4-462b-bb29-f138a4a65199
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-web
      port: 9090
      protocol: TCP
      targetPort: http-web
    selector:
      app.kubernetes.io/name: prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:35:12Z"
    labels:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/version: 0.6.4
      helm.sh/chart: metrics-server-3.11.0
    name: metrics-server
    namespace: kube-system
    resourceVersion: "3449"
    uid: 2dfe529c-bafb-4a28-aefc-c3be105ddef7
  spec:
    clusterIP: 10.43.191.88
    clusterIPs:
    - 10.43.191.88
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/instance: metrics-server
      app.kubernetes.io/name: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.9.5","helm.sh/chart":"ingress-nginx-4.9.0"},"name":"ingress-nginx-defaultbackend","namespace":"kube-system"},"spec":{"ports":[{"appProtocol":"http","name":"http","port":80,"protocol":"TCP","targetPort":"http"}],"selector":{"app.kubernetes.io/component":"default-backend","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:35:32Z"
    labels:
      app.kubernetes.io/component: default-backend
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.9.5
      helm.sh/chart: ingress-nginx-4.9.0
    name: ingress-nginx-defaultbackend
    namespace: kube-system
    resourceVersion: "3590"
    uid: 33eeae3f-a4c3-4773-8f9d-c1f9994f2342
  spec:
    clusterIP: 10.43.177.184
    clusterIPs:
    - 10.43.177.184
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: http
      name: http
      port: 80
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: default-backend
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.9.5","helm.sh/chart":"ingress-nginx-4.9.0"},"name":"ingress-nginx-controller-metrics","namespace":"kube-system"},"spec":{"ports":[{"name":"metrics","port":10254,"protocol":"TCP","targetPort":"metrics"}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:35:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.9.5
      helm.sh/chart: ingress-nginx-4.9.0
    name: ingress-nginx-controller-metrics
    namespace: kube-system
    resourceVersion: "3591"
    uid: 225cae2b-24cd-4d9d-b554-b83a8773a9c9
  spec:
    clusterIP: 10.43.112.232
    clusterIPs:
    - 10.43.112.232
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 10254
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.9.5","helm.sh/chart":"ingress-nginx-4.9.0"},"name":"ingress-nginx-controller-admission","namespace":"kube-system"},"spec":{"ports":[{"appProtocol":"https","name":"https-webhook","port":443,"targetPort":"webhook"}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"ClusterIP"}}
    creationTimestamp: "2024-01-25T17:35:32Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.9.5
      helm.sh/chart: ingress-nginx-4.9.0
    name: ingress-nginx-controller-admission
    namespace: kube-system
    resourceVersion: "3592"
    uid: 2402c572-4bf8-4c4f-9086-9a602542f901
  spec:
    clusterIP: 10.43.125.196
    clusterIPs:
    - 10.43.125.196
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"ingress-nginx","app.kubernetes.io/part-of":"ingress-nginx","app.kubernetes.io/version":"1.9.5","helm.sh/chart":"ingress-nginx-4.9.0"},"name":"ingress-nginx-controller","namespace":"kube-system"},"spec":{"externalTrafficPolicy":"Local","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","ports":[{"appProtocol":"http","name":"http","port":80,"protocol":"TCP","targetPort":"http"},{"appProtocol":"https","name":"https","port":443,"protocol":"TCP","targetPort":"https"}],"selector":{"app.kubernetes.io/component":"controller","app.kubernetes.io/instance":"ingress-nginx","app.kubernetes.io/name":"ingress-nginx"},"type":"LoadBalancer"}}
    creationTimestamp: "2024-01-25T17:35:32Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.9.5
      helm.sh/chart: ingress-nginx-4.9.0
    name: ingress-nginx-controller
    namespace: kube-system
    resourceVersion: "3872"
    uid: 20890b04-aaea-44f2-81fc-fe96b24930d3
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.43.73.28
    clusterIPs:
    - 10.43.73.28
    externalTrafficPolicy: Local
    healthCheckNodePort: 31905
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: http
      name: http
      nodePort: 31037
      port: 80
      protocol: TCP
      targetPort: http
    - appProtocol: https
      name: https
      nodePort: 31242
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: ingress-nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 172.19.0.5
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-server-metrics","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-server-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8083,"protocol":"TCP","targetPort":8083}],"selector":{"app.kubernetes.io/name":"argocd-server"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-server-metrics
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-server-metrics
    namespace: argocd
    resourceVersion: "21991"
    uid: 9c0567d8-001d-4a65-a15f-098f8aa04020
  spec:
    clusterIP: 10.43.97.174
    clusterIPs:
    - 10.43.97.174
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"notifications-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-notifications-controller-metrics","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-notifications-controller-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":9001,"protocol":"TCP","targetPort":9001}],"selector":{"app.kubernetes.io/name":"argocd-notifications-controller"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: notifications-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-notifications-controller-metrics
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-notifications-controller-metrics
    namespace: argocd
    resourceVersion: "21992"
    uid: 4aa398d1-4b2d-4703-87bd-98f14dd23528
  spec:
    clusterIP: 10.43.92.24
    clusterIPs:
    - 10.43.92.24
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 9001
      protocol: TCP
      targetPort: 9001
    selector:
      app.kubernetes.io/name: argocd-notifications-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"redis","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-redis","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-redis","namespace":"argocd"},"spec":{"ports":[{"name":"tcp-redis","port":6379,"targetPort":6379}],"selector":{"app.kubernetes.io/name":"argocd-redis"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: redis
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-redis
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-redis
    namespace: argocd
    resourceVersion: "21993"
    uid: dd15829e-c1a7-49fc-8840-cc1ef41ce0cc
  spec:
    clusterIP: 10.43.6.222
    clusterIPs:
    - 10.43.6.222
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app.kubernetes.io/name: argocd-redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"metrics","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-metrics","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-metrics","namespace":"argocd"},"spec":{"ports":[{"name":"metrics","port":8082,"protocol":"TCP","targetPort":8082}],"selector":{"app.kubernetes.io/name":"argocd-application-controller"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-metrics
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-metrics
    namespace: argocd
    resourceVersion: "21994"
    uid: 3c053ecb-0481-4d09-b4a7-3004db4245dc
  spec:
    clusterIP: 10.43.72.197
    clusterIPs:
    - 10.43.72.197
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
    selector:
      app.kubernetes.io/name: argocd-application-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-server","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":8080},{"name":"https","port":443,"protocol":"TCP","targetPort":8080}],"selector":{"app.kubernetes.io/name":"argocd-server"},"type":"ClusterIP"}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-server
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-server
    namespace: argocd
    resourceVersion: "21995"
    uid: 346aff07-78d4-4857-b9a9-f08214413648
  spec:
    clusterIP: 10.43.69.90
    clusterIPs:
    - 10.43.69.90
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    selector:
      app.kubernetes.io/name: argocd-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"repo-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-repo-server","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-repo-server","namespace":"argocd"},"spec":{"ports":[{"name":"server","port":8081,"protocol":"TCP","targetPort":8081},{"name":"metrics","port":8084,"protocol":"TCP","targetPort":8084}],"selector":{"app.kubernetes.io/name":"argocd-repo-server"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: repo-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-repo-server
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-repo-server
    namespace: argocd
    resourceVersion: "21996"
    uid: 6cec067d-7288-4aba-8a9f-0d1001a647bb
  spec:
    clusterIP: 10.43.49.147
    clusterIPs:
    - 10.43.49.147
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: server
      port: 8081
      protocol: TCP
      targetPort: 8081
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: 8084
    selector:
      app.kubernetes.io/name: argocd-repo-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"applicationset-controller","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-applicationset-controller","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-applicationset-controller","namespace":"argocd"},"spec":{"ports":[{"name":"webhook","port":7000,"protocol":"TCP","targetPort":"webhook"},{"name":"metrics","port":8080,"protocol":"TCP","targetPort":"metrics"}],"selector":{"app.kubernetes.io/name":"argocd-applicationset-controller"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: applicationset-controller
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-applicationset-controller
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-applicationset-controller
    namespace: argocd
    resourceVersion: "21997"
    uid: 5c76b7ec-c3df-4b2f-abb1-f648a2b8e8d2
  spec:
    clusterIP: 10.43.17.71
    clusterIPs:
    - 10.43.17.71
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: webhook
      port: 7000
      protocol: TCP
      targetPort: webhook
    - name: metrics
      port: 8080
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/name: argocd-applicationset-controller
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"reloader.stakater.com/auto":"true"},"labels":{"app.kubernetes.io/component":"dex-server","app.kubernetes.io/instance":"argocd","app.kubernetes.io/name":"argocd-dex-server","app.kubernetes.io/part-of":"argocd","monitoring":"prometheus","prometheus":"main"},"name":"argocd-dex-server","namespace":"argocd"},"spec":{"ports":[{"name":"http","port":5556,"protocol":"TCP","targetPort":5556},{"name":"grpc","port":5557,"protocol":"TCP","targetPort":5557},{"name":"metrics","port":5558,"protocol":"TCP","targetPort":5558}],"selector":{"app.kubernetes.io/name":"argocd-dex-server"}}}
      reloader.stakater.com/auto: "true"
    creationTimestamp: "2024-01-25T17:29:12Z"
    labels:
      app.kubernetes.io/component: dex-server
      app.kubernetes.io/instance: argocd
      app.kubernetes.io/name: argocd-dex-server
      app.kubernetes.io/part-of: argocd
      monitoring: prometheus
      prometheus: main
    name: argocd-dex-server
    namespace: argocd
    resourceVersion: "21998"
    uid: 6f77fd5c-8264-4d8f-88ba-4a3d9a4ec4f5
  spec:
    clusterIP: 10.43.116.97
    clusterIPs:
    - 10.43.116.97
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: 5556
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: 5557
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: 5558
    selector:
      app.kubernetes.io/name: argocd-dex-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-kube-controller-manager
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      jobLabel: kube-controller-manager
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-kube-controller-manager
    namespace: kube-system
    resourceVersion: "22238"
    uid: 2b3e666d-16f8-4908-9173-67bb0e7cc7df
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10257
      protocol: TCP
      targetPort: 10257
    selector:
      component: kube-controller-manager
      tier: control-plane
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-kube-scheduler
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      jobLabel: kube-scheduler
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-kube-scheduler
    namespace: kube-system
    resourceVersion: "22239"
    uid: 697cb834-f629-45d1-80db-2b36b0a7c7bb
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10259
      protocol: TCP
      targetPort: 10259
    selector:
      component: kube-scheduler
      tier: control-plane
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-coredns
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      jobLabel: coredns
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-coredns
    namespace: kube-system
    resourceVersion: "22240"
    uid: 030da73f-a241-4db9-a4cb-9dd4d7a91e5b
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-operator
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-operator
    namespace: monitoring
    resourceVersion: "22243"
    uid: f5523580-d914-4064-ab20-e3270cc38314
  spec:
    clusterIP: 10.43.233.184
    clusterIPs:
    - 10.43.233.184
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: kube-prometheus-stack-operator
      release: kube-prometheus-stack
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-kube-proxy
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      jobLabel: kube-proxy
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-kube-proxy
    namespace: kube-system
    resourceVersion: "22244"
    uid: 886c8c94-1970-43ca-b4b7-5c1b81eb9880
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10249
      protocol: TCP
      targetPort: 10249
    selector:
      k8s-app: kube-proxy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-kube-etcd
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      jobLabel: kube-etcd
      prometheus: main
      release: kube-prometheus-stack
    name: kube-prometheus-stack-kube-etcd
    namespace: kube-system
    resourceVersion: "22245"
    uid: 8ceb1b99-c7af-4465-82fc-2b797d72b0ab
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 2381
      protocol: TCP
      targetPort: 2381
    selector:
      component: etcd
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      prometheus: main
      release: kube-prometheus-stack
      self-monitor: "true"
    name: kube-prometheus-stack-prometheus
    namespace: monitoring
    resourceVersion: "22247"
    uid: 073dc70d-bd6a-414e-8878-041233a8f068
  spec:
    clusterIP: 10.43.163.197
    clusterIPs:
    - 10.43.163.197
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-web
      port: 9090
      protocol: TCP
      targetPort: 9090
    - name: reloader-web
      port: 8080
      protocol: TCP
      targetPort: reloader-web
    - name: grpc
      port: 10901
      protocol: TCP
      targetPort: 10901
    selector:
      app.kubernetes.io/name: prometheus
      operator.prometheus.io/name: kube-prometheus-stack-prometheus
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-25T17:32:50Z"
    labels:
      app: kube-prometheus-stack-alertmanager
      app.kubernetes.io/instance: kube-prometheus-stack
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 48.2.2
      chart: kube-prometheus-stack-48.2.2
      heritage: Helm
      prometheus: main
      release: kube-prometheus-stack
      self-monitor: "true"
    name: kube-prometheus-stack-alertmanager
    namespace: monitoring
    resourceVersion: "22248"
    uid: e9230c75-4fce-43cb-a771-4bca31a861df
  spec:
    clusterIP: 10.43.125.117
    clusterIPs:
    - 10.43.125.117
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-web
      port: 9093
      protocol: TCP
      targetPort: 9093
    - name: reloader-web
      port: 8080
      protocol: TCP
      targetPort: reloader-web
    selector:
      alertmanager: kube-prometheus-stack-alertmanager
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
